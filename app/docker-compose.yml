version: '3.8'

services:
  bff:
    container_name: demo-bff
    image: app/golang:latest
    build:
      context: .
      dockerfile: docker/golang/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      - APM_NEWRELIC_LICENSE_KEY
      - DATABASE_DSN_WRITER=demo:demo@tcp(db:3306)/demo?charset=utf8&parseTime=True&loc=Asia%2FTokyo&rejectReadOnly=true
      - DATABASE_DSN_READER=demo:demo@tcp(db:3306)/demo?charset=utf8&parseTime=True&loc=Asia%2FTokyo
    ports:
      - '4000:4000'
    networks:
      - app_subnet
    volumes:
      - golang_mod_cache:/go/pkg/mod
      - .:/app/api:rw
    working_dir: /app/api
    init: true
    command: ['go', 'run', 'bff/main.go']

  front:
    container_name: demo-front
    build:
      context: .
      dockerfile: docker/react/Dockerfile
    ports:
      - "3000:80"
    networks:
      - app_subnet

  nginx:
    container_name: demo-nginx
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    depends_on:
      - bff
    networks:
      - app_subnet

  db:
    container_name: demo-db
    image: mysql:8.0.32
    #platform: linux/amd64
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "demo", "-pdemo"]
      start_period: 115s
      interval: 15s
      timeout: 15s
      retries: 3
    ports:
      - "3306:3306"
    networks:
      - app_subnet
    volumes:
      - ./docker/db/conf:/etc/mysql/conf.d:ro
      - "./docker/db/init/demo:/docker-entrypoint-initdb.d:ro"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: demo
      MYSQL_USER: demo
      MYSQL_PASSWORD: demo
      TZ: Asia/Tokyo
      LANG: C.UTF-8

volumes:
  golang_mod_cache:

networks:
  app_subnet:
